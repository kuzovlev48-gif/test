import pygame
import sys
from logic import GameLogic, Colors, Color
from settings import *

class BallGame:
    def __init__(self, width=WINDOW_WIDTH, height=WINDOW_HEIGHT):
        pygame.init()
        self.width = width
        self.height = height
        self.screen = pygame.display.set_mode((width, height))
        pygame.display.set_caption("–®–∞—Ä–∏–∫–∏: –∏–≥—Ä–∞")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–π –ª–æ–≥–∏–∫–∏
        self.game_logic = GameLogic(width, height)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã
        self.clock = pygame.time.Clock()
        self.FPS = FPS
        
        # –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞—Ä–∏–∫–æ–≤
        self.start_ball_count = START_BALL_COUNT
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Å–∞—Å—ã–≤–∞–Ω–∏—è
        self.suck_radius = SUCK_RADIUS
        self.suck_active = False
        
        # –¶–≤–µ—Ç–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.WHITE = (255, 255, 255)
        self.BLACK = (0, 0, 0)
        self.GRAY = (128, 128, 128)
        self.RED = (255, 0, 0)
        self.GREEN = (0, 255, 0)
        self.BLUE = (0, 0, 255)
        
        # –®—Ä–∏—Ñ—Ç
        self.font = pygame.font.Font(None, 36)
        self.small_font = pygame.font.Font(None, 24)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö —à–∞—Ä–∏–∫–æ–≤
        self.initialize_balls()
        
    def initialize_balls(self):
        """–°–æ–∑–¥–∞—ë—Ç —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —à–∞—Ä–∏–∫–∏"""
        colors = [Colors.RED, Colors.GREEN, Colors.BLUE, Colors.YELLOW, 
                 Colors.MAGENTA, Colors.CYAN, Colors.ORANGE, Colors.PURPLE]
        
        for i in range(self.start_ball_count):
            x = 100 + i * 100
            y = 100 + (i % 3) * 100
            color = colors[i % len(colors)]
            self.game_logic.add_ball(x, y, color)
    
    def draw_ball(self, ball):
        """–û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç —à–∞—Ä–∏–∫ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º –∏ –æ–±–≤–æ–¥–∫–æ–π"""
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç —à–∞—Ä–∏–∫–∞
        color = ball.color.to_tuple()
        
        # –°–æ–∑–¥–∞—ë–º –≥—Ä–∞–¥–∏–µ–Ω—Ç (–±–æ–ª–µ–µ —Å–≤–µ—Ç–ª—ã–π —Ü–µ–Ω—Ç—Ä)
        center_color = tuple(min(255, c + 50) for c in color)
        
        # –†–∏—Å—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å
        pygame.draw.circle(self.screen, color, (int(ball.x), int(ball.y)), int(ball.radius))
        
        # –†–∏—Å—É–µ–º —Å–≤–µ—Ç–ª—ã–π —Ü–µ–Ω—Ç—Ä –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –æ–±—ä—ë–º–∞
        pygame.draw.circle(self.screen, center_color, (int(ball.x), int(ball.y)), int(ball.radius - 3))
        
        # –†–∏—Å—É–µ–º –æ–±–≤–æ–¥–∫—É
        pygame.draw.circle(self.screen, self.BLACK, (int(ball.x), int(ball.y)), int(ball.radius), 2)
        
        # –†–∏—Å—É–µ–º –±–ª–∏–∫ (–º–∞–ª–µ–Ω—å–∫–∏–π –±–µ–ª—ã–π –∫—Ä—É–≥)
        highlight_pos = (int(ball.x - ball.radius * 0.3), int(ball.y - ball.radius * 0.3))
        pygame.draw.circle(self.screen, (255, 255, 255), highlight_pos, int(ball.radius * 0.2))
    
    def draw_suck_effect(self, mouse_pos):
        """–û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç –≤—Å–∞—Å—ã–≤–∞–Ω–∏—è"""
        if self.suck_active:
            # –†–∏—Å—É–µ–º –∫—Ä—É–≥ –≤—Å–∞—Å—ã–≤–∞–Ω–∏—è
            pygame.draw.circle(self.screen, (255, 255, 0), mouse_pos, self.suck_radius, 3)
            
            # –†–∏—Å—É–µ–º –ø—É–Ω–∫—Ç–∏—Ä–Ω—É—é –ª–∏–Ω–∏—é –∫ –±–ª–∏–∂–∞–π—à–µ–º—É —à–∞—Ä–∏–∫—É
            for ball in self.game_logic.get_balls():
                distance = ((ball.x - mouse_pos[0])**2 + (ball.y - mouse_pos[1])**2)**0.5
                if distance <= self.suck_radius:
                    # –†–∏—Å—É–µ–º –ª–∏–Ω–∏—é —Å –ø—É–Ω–∫—Ç–∏—Ä–æ–º
                    points = []
                    dx = mouse_pos[0] - ball.x
                    dy = mouse_pos[1] - ball.y
                    steps = 10
                    for i in range(steps + 1):
                        if i % 2 == 0:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–∞–∂–¥—ã–π –≤—Ç–æ—Ä–æ–π —Å–µ–≥–º–µ–Ω—Ç –¥–ª—è –ø—É–Ω–∫—Ç–∏—Ä–∞
                            x = ball.x + (dx * i) // steps
                            y = ball.y + (dy * i) // steps
                            points.append((x, y))
                    
                    if len(points) > 1:
                        pygame.draw.lines(self.screen, (255, 255, 0), False, points, 2)
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤—Å–∞—Å—ã–≤–∞–Ω–∏—è
                    pygame.draw.circle(self.screen, (255, 255, 0), (int(ball.x), int(ball.y)), int(ball.radius + 5), 2)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–µ–ª–∫—É –∫ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—é
            inventory = self.game_logic.get_inventory()
            if inventory:
                # –†–∏—Å—É–µ–º —Å—Ç—Ä–µ–ª–∫—É –æ—Ç –º—ã—à–∏ –∫ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—é
                arrow_start = mouse_pos
                arrow_end = (50, 30)  # –ü–æ–∑–∏—Ü–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
                
                # –†–∏—Å—É–µ–º –ª–∏–Ω–∏—é —Å—Ç—Ä–µ–ª–∫–∏
                pygame.draw.line(self.screen, (0, 255, 0), arrow_start, arrow_end, 3)
                
                # –†–∏—Å—É–µ–º –Ω–∞–∫–æ–Ω–µ—á–Ω–∏–∫ —Å—Ç—Ä–µ–ª–∫–∏
                arrow_points = [
                    (arrow_end[0] - 10, arrow_end[1] - 5),
                    (arrow_end[0] - 10, arrow_end[1] + 5),
                    arrow_end
                ]
                pygame.draw.polygon(self.screen, (0, 255, 0), arrow_points)
    
    def draw_inventory(self):
        """–û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"""
        inventory = self.game_logic.get_inventory()
        
        # –†–∏—Å—É–µ–º —Ñ–æ–Ω –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
        inventory_bg = pygame.Rect(10, 10, 200, 80)
        pygame.draw.rect(self.screen, (240, 240, 240), inventory_bg)
        pygame.draw.rect(self.screen, self.BLACK, inventory_bg, 2)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
        text = self.font.render(f"–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {len(inventory)}", True, self.BLACK)
        self.screen.blit(text, (20, 15))
        
        # –†–∏—Å—É–µ–º —à–∞—Ä–∏–∫–∏ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
        for i, ball in enumerate(inventory):
            x = 25 + i * 35
            y = 45
            # –†–∏—Å—É–µ–º —É–º–µ–Ω—å—à–µ–Ω–Ω—ã–µ —à–∞—Ä–∏–∫–∏ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
            color = ball.color.to_tuple()
            pygame.draw.circle(self.screen, color, (x, y), 12)
            pygame.draw.circle(self.screen, self.BLACK, (x, y), 12, 2)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —à–∞—Ä–∏–∫–∞
            number_text = self.small_font.render(str(i+1), True, self.WHITE)
            text_rect = number_text.get_rect(center=(x, y))
            self.screen.blit(number_text, text_rect)
    
    def draw_delete_zone(self):
        """–û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –∑–æ–Ω—É —É–¥–∞–ª–µ–Ω–∏—è"""
        dx, dy, dw, dh = self.game_logic.get_delete_zone()
        
        # –†–∏—Å—É–µ–º –∑–æ–Ω—É —É–¥–∞–ª–µ–Ω–∏—è —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º
        pygame.draw.rect(self.screen, self.RED, (dx, dy, dw, dh))
        pygame.draw.rect(self.screen, (200, 0, 0), (dx+5, dy+5, dw-10, dh-10))
        pygame.draw.rect(self.screen, self.BLACK, (dx, dy, dw, dh), 3)
        
        # –¢–µ–∫—Å—Ç "–£–î–ê–õ–ò–¢–¨"
        text = self.font.render("–£–î–ê–õ–ò–¢–¨", True, self.WHITE)
        text_rect = text.get_rect(center=(dx + dw//2, dy + dh//2))
        self.screen.blit(text, text_rect)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –∫–æ—Ä–∑–∏–Ω—ã
        trash_icon = "üóëÔ∏è"
        icon_text = self.small_font.render(trash_icon, True, self.WHITE)
        icon_rect = icon_text.get_rect(center=(dx + dw//2, dy + dh//2 + 20))
        self.screen.blit(icon_text, icon_rect)
    
    def draw_instructions(self):
        """–û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"""
        instructions = [
            "–õ–ö–ú - –≤—Å–∞—Å—ã–≤–∞—Ç—å —à–∞—Ä–∏–∫–∏",
            "–ü–ö–ú - –≤—ã–ø–ª—ë–≤—ã–≤–∞—Ç—å —à–∞—Ä–∏–∫–∏", 
            "–ü–µ—Ä–µ—Ç–∞—â–∏ –≤ –∫—Ä–∞—Å–Ω—É—é –∑–æ–Ω—É - —É–¥–∞–ª–∏—Ç—å"
        ]
        
        y_offset = self.height - 100
        for i, instruction in enumerate(instructions):
            text = self.small_font.render(instruction, True, self.BLACK)
            self.screen.blit(text, (10, y_offset + i * 25))
    
    def handle_events(self):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è"""
        mouse_pos = pygame.mouse.get_pos()
        
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                return False
            
            elif event.type == pygame.MOUSEBUTTONDOWN:
                if event.button == 1:  # –õ–ö–ú - –≤—Å–∞—Å—ã–≤–∞–Ω–∏–µ
                    self.suck_active = True
                    sucked_ball = self.game_logic.suck_ball(mouse_pos[0], mouse_pos[1], self.suck_radius)
                    if sucked_ball:
                        print(f"–í—Å–∞—Å–∞–Ω —à–∞—Ä–∏–∫ —Ü–≤–µ—Ç–∞ {sucked_ball.color.to_tuple()}")
                
                elif event.button == 3:  # –ü–ö–ú - –≤—ã–ø–ª—ë–≤—ã–≤–∞–Ω–∏–µ
                    spat_ball = self.game_logic.spit_ball(mouse_pos[0], mouse_pos[1])
                    if spat_ball:
                        print(f"–í—ã–ø–ª—é–Ω—É—Ç —à–∞—Ä–∏–∫ —Ü–≤–µ—Ç–∞ {spat_ball.color.to_tuple()}")
            
            elif event.type == pygame.MOUSEBUTTONUP:
                if event.button == 1:  # –õ–ö–ú –æ—Ç–ø—É—â–µ–Ω–∞
                    self.suck_active = False
            
            elif event.type == pygame.MOUSEMOTION:
                if self.suck_active:
                    # –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –≤—Å–∞—Å—ã–≤–∞–Ω–∏–µ –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –º—ã—à–∏
                    self.game_logic.suck_ball(mouse_pos[0], mouse_pos[1], self.suck_radius)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
                if self.game_logic.is_in_delete_zone(mouse_pos[0], mouse_pos[1]):
                    if self.game_logic.delete_ball_from_inventory(mouse_pos[0], mouse_pos[1]):
                        print("–®–∞—Ä–∏–∫ —É–¥–∞–ª—ë–Ω –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è")
        
        return True
    
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª"""
        running = True
        
        while running:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π
            running = self.handle_events()
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–π –ª–æ–≥–∏–∫–∏
            self.game_logic.update()
            
            # –û—Ç—Ä–∏—Å–æ–≤–∫–∞
            self.screen.fill(self.WHITE)  # –ë–µ–ª—ã–π —Ñ–æ–Ω
            
            # –†–∏—Å—É–µ–º —à–∞—Ä–∏–∫–∏
            for ball in self.game_logic.get_balls():
                self.draw_ball(ball)
            
            # –†–∏—Å—É–µ–º —ç—Ñ—Ñ–µ–∫—Ç –≤—Å–∞—Å—ã–≤–∞–Ω–∏—è
            mouse_pos = pygame.mouse.get_pos()
            self.draw_suck_effect(mouse_pos)
            
            # –†–∏—Å—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            self.draw_inventory()
            self.draw_delete_zone()
            self.draw_instructions()
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞
            pygame.display.flip()
            self.clock.tick(self.FPS)
        
        pygame.quit()
        sys.exit()

if __name__ == "__main__":
    game = BallGame()
    game.run()
